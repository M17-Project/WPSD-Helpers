#!/bin/bash

# vars
CALL=$( grep "Callsign" /etc/WPSD-release | awk '{print $3}' )
osName=$( lsb_release -cs )
gitBranch=$(git --work-tree=/var/www/dashboard --git-dir=/var/www/dashboard/.git branch | grep '*' | cut -f2 -d ' ')
dashVer=$( git --work-tree=/var/www/dashboard --git-dir=/var/www/dashboard/.git rev-parse --short=10 ${gitBranch} )
UUID=$( grep "UUID" /etc/WPSD-release | awk '{print $3}' )
uuidStr=$(egrep 'UUID' /etc/WPSD-release | awk {'print $3'})
hwDeetz=$( /usr/local/sbin/.wpsd-platform-detect )
modem=$(grep '^ModemFW\s*=\s*.*' /etc/WPSD-release | sed 's/ModemFW = //g')
modemType=$(grep '^ModemType\s*=\s*.*' /etc/WPSD-release | sed 's/ModemType = //g')
uaStr="Server-Side Exec: WPSD-BG-Bootstrap-Task Ver.# ${dashVer} Call:${CALL} UUID:${uuidStr} [${osName} Modem: ${modem} ${modemType}]"

/usr/local/sbin/.wpsd-slipstream-tasks > /dev/null 2>&1

TIMERS=("wpsd-running-tasks.timer" "wpsd-nightly-tasks.timer")
for TIMER in "${TIMERS[@]}"; do
    if ! systemctl is-active --quiet "$TIMER"; then
        echo "$TIMER is not running. Starting it..."
        systemctl start "$TIMER"
        if systemctl is-active --quiet "$TIMER"; then
            echo "$TIMER started successfully."
        else
            echo "Failed to start $TIMER."
        fi
    else
        echo "$TIMER is already running."
    fi
done

EXCLUDED_CALLS=("M1ABC" "N0CALL" "NOCALL" "PE1XYZ" "PE1ABC")
if [[ " ${EXCLUDED_CALLS[@]} " =~ " ${CALL} " ]]; then
    :
else
    if grep -q 'hwDeetz' /usr/local/sbin/.wpsd-common-funcs || grep -q 'pistar-css-W0CHP.ini' /var/www/dashboard/css/css-base.php ; then
        curl -Ls -A "PH00 reset ${uaStr}" https://wpsd-swd.w0chp.net/WPSD-SWD/WPSD-Helpers/raw/branch/master/reset-wpsd-sbin | bash
	cd /var/www/dashboard && git reset --hard origin/master
	/usr/local/sbin/wpsd-update
    fi
fi
